version: "3.9"

services:
  redis:
    container_name: redis
    image: redis:6.2.7-alpine
    restart: always
    ports:
      - "6379:6379"
    command: redis-server --save 60 1 --loglevel warning

  db:
    container_name: db
    image: postgres:alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - envs/stage/db/.env
    restart: always
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: .
      dockerfile: dockerfiles/stage/django/Dockerfile
    container_name: backend
    command: sh -c "python3 manage.py check_database && \
                    python3 manage.py makemigrations --noinput && \
                    python3 manage.py migrate --noinput && \
                    python3 manage.py collectstatic --noinput && \
                    gunicorn --bind 0.0.0.0:8000 core.wsgi:application"
    volumes:
      - ./core:/usr/src/app
      - static_volume:/usr/src/app/static
      - media_volume:/usr/src/app/media
    expose:
      - "8000"
    env_file:
      - envs/stage/django/.env
    depends_on:
      - redis
      - db

  nginx:
    build:
      context: ./dockerfiles/stage/nginx/
    container_name: nginx
    restart: always
    ports:
      - "80:80"
    volumes:
      - static_volume:/home/app/static
      - media_volume:/home/app/media
    depends_on:
      - backend


volumes:
  static_volume:
  media_volume:
  postgres_data:

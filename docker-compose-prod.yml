version: "3.9"
   
services:
  redis:
    container_name: redis
    image: redis
    restart: always
    ports:
      - "6379:6379"
    command: redis-server --save 60 1 --loglevel warning

  db:
    image: postgres:13-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - envs/prod/db/.env
    restart: always

  backend:
    build: 
      context: .
      dockerfile: dockerfiles/prod/django/Dockerfile
    container_name: backend
    command: gunicorn core.wsgi:application --bind 0.0.0.0:8000
    volumes:
      - static_volume:/usr/src/app/static
      - media_volume:/usr/src/app/media
    expose:
      - "8000"
    env_file:
      - envs/prod/django/.env
    depends_on:
      - db
      - redis
  

  nginx-proxy:
    container_name: nginx-proxy
    build:
      context: .
      dockerfile: dockerfiles/prod/nginx/Dockerfile
    restart: always
    ports:
      - 443:443
      - 80:80
    volumes:
      - static_volume:/home/app/static
      - media_volume:/home/app/media
      - certs:/etc/nginx/certs
      - html:/usr/share/nginx/html
      - vhost:/etc/nginx/vhost.d
      - /var/run/docker.sock:/tmp/docker.sock:ro
    depends_on:
      - backend
    
  nginx-proxy-letsencrypt:
    image: jrcs/letsencrypt-nginx-proxy-companion
    env_file:
      - envs/prod/nginx/.env
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - certs:/etc/nginx/certs
      - html:/usr/share/nginx/html
      - vhost:/etc/nginx/vhost.d
      - acme:/etc/acme.sh
    depends_on:
      - nginx-proxy

volumes:
  postgres_data:
  static_volume:
  media_volume:
  certs:
  html:
  vhost:
  acme:
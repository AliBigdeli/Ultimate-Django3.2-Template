version: "3.9"
   
services:
  redis:
    container_name: redis
    image: redis:6.2.7-alpine
    restart: always
    ports:
      - "6379:6379"
    command: redis-server --save 60 1 --loglevel warning

  db:
    container_name: db
    image: postgres:13-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - envs/prod/db/.env
    restart: always

  backend:
    build: 
      context: .
      dockerfile: dockerfiles/prod/django/Dockerfile
    container_name: backend
    volumes:
      - static_volume:/usr/src/app/static
      - media_volume:/usr/src/app/media
    expose:
      - "8000"
    env_file:
      - envs/prod/django/.env
    depends_on:
      - db
      - redis
  
  certbot:
    image: certbot/certbot:latest
    container_name: certbot
    volumes: 
      - ./dockerfiles/prod/nginx/certbot/conf:/etc/letsencrypt
      - ./dockerfiles/prod/nginx/certbot/www:/var/www/certbot
    env_file:
      - envs/prod/nginx/.env
    command: certonly --webroot -w /var/www/certbot --force-renewal --email {EMAIL} -d {DOMAIN} --agree-tos

  nginx-proxy:
    container_name: nginx-proxy
    build:
      context: .
      dockerfile: dockerfiles/prod/nginx/Dockerfile
    restart: always
    env_file:
      - envs/prod/nginx/.env
    ports:
      - 443:443
      - 80:80
    volumes:
      - static_volume:/home/app/static
      - media_volume:/home/app/media
      - ./dockerfiles/prod/nginx/certbot/conf:/etc/letsencrypt
      - ./dockerfiles/prod/nginx/certbot/www:/var/www/certbot
    depends_on:
      - backend
      - certbot
    


volumes:
  postgres_data:
  static_volume:
  media_volume:
  cert_www_volume:
  cert_conf_volume:
